name: Deploy Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:
    inputs:
      skip-build:
        type: boolean
        description: "Skip build and push"
        required: false
        default: false
      tag:
        type: string
        description: "Image tag (e.g. 1.0.0)"
        required: false
      latest:
        type: boolean
        description: "Tag as latest"
        required: false
        default: false

permissions: {}

jobs:
  docker:
    name: Docker
    if: ${{ !github.event.inputs.skip-build }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=sha
            type=ref,event=branch
            type=semver,pattern={{version}}
            ${{ github.event.inputs.tag }}
            ${{ github.event.inputs.latest == 'true' && 'latest' }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: src/Voting
          push: ${{ github.event.inputs.tag != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy
    if: ${{ success() || inputs.skip-build }}
    needs: docker
    environment: k8s-deploy
    runs-on: k8s-deploy
    permissions:
      contents: read
    container:
      image: alpine:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install helm
        run: apk add helm --no-cache
      - name: Add Helm repo
        run: |
          helm repo add stakater https://stakater.github.io/stakater-charts
      - name: Deploy with Helm
        run: |
          helm upgrade -i \
            voting \
             stakater/application \
            --version 5.2.3 \
            --namespace voting \
            --create-namespace \
            --values helm/common.yaml \
            --set ingress.hosts[0].host=${{ vars.FQDN }}
