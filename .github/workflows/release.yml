name: Release Application

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  build:
    name: Build, Test & Publish
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Restore
        run: dotnet restore -v d
        working-directory: src
      - name: Build
        run: dotnet build -c Release -v d
        working-directory: src
      - name: Test
        run: dotnet test -c Release -v d --logger trx
        working-directory: src
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure() # run this step even if previous step failed
        with:
          name: .NET Tests
          path: ${{ github.workspace }}/src/**/*.trx
          reporter: dotnet-trx
      - name: Publish
        run: dotnet publish -c Release -v d -o ${{ github.workspace }}/app
        working-directory: src
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: app

  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - build
    permissions:
      contents: read
    outputs:
      new_release_published: ${{ steps.semrel.outputs.new_release_published == 'true' }}
      new_release_version: ${{ steps.semrel.outputs.new_release_version }}
      last_release_version: ${{ steps.semrel.outputs.last_release_version }}
    steps:
      - name: Setup Node.js
        uses: actions/setup-node@v4
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: build-${{ github.sha }}
          path: app
      - name: Zip artifact
        run: zip -r voting.zip app
      - uses: actions/create-github-app-token@v1
        id: token
        with:
          app-id: ${{ vars.APP_ID_SEMREL }}
          private-key: ${{ secrets.APP_KEY_SEMREL }}
      - name: Semantic release
        id: semrel
        uses: cycjimmy/semantic-release-action@v4
        with:
          extra_plugins: |
            semantic-release-replace-plugin
          dry_run: ${{ github.event_name != 'push' }}
          ci: true
        env:
          GITHUB_TOKEN: ${{ steps.token.outputs.token }}
